File processing commands:
=========================

-Awk command: Scanning and processing language, it can be used to build useful filters in linux

EXAMPLE: suppose there is a file employee.txt and there are modules like - Name, Position, Profile and Salary. We want to find out MANAGER Position so lets see:

$ awk '/manager/ {print}' employee.txt

(Many more functions are applicable through awk command)
--------------------------------------------------------

-Sed command: It is a powerful Streams editor for filtering and transforming text. we can replace text in the file with help of sed

$sed 's/unix/linux' sample.txt   (it will replace unix with linux)

(many more function)
--------------------------------------------------------

-Grep, Egrep, Fgrep, Rgrep:

The grep filter searches a file for a particular pattern of characters, and displays all lines that contain that pattern.

Options Description
-c : This prints only a count of the lines that match a pattern
-h : Display the matched lines, but do not display the filenames.
-i : Ignores, case for matching
-l : Displays list of a filenames only.
-n : Display the matched lines and their line numbers.
-v : This prints out all the lines that do not matches the pattern
-e exp : Specifies expression with this option. Can use multiple times.
-f file : Takes patterns from file, one per line.
-E : Treats pattern as an extended regular expression (ERE)
-w : Match whole word
-o : Print only the matched parts of a matching line,
 with each such part on a separate output line.
-A n : Prints searched line and nlines after the result.
-B n : Prints searched line and n line before the result.
-C n : Prints searched line and n lines after before the result.

EXAMPLE:

$grep -c "unix" sample.txt
$cat sample | grep -v a | sort - r
(and much mmore functions to be used)
----------------------------------------------------------

